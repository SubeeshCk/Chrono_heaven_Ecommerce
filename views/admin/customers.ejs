<%- include("../layouts/admin/header") -%>


    <section class="content-main">
        <div class="content-header">
            <h2 class="content-title">Customers</h2>
            <div>
                <a href="#" class="btn btn-primary"><i class="material-icons md-plus"></i> Create new</a>
            </div>
        </div>
        <div class="card mb-4">
            <header class="card-header">
                <div class="row gx-3">
                    <div class="col-lg-4 col-md-6 me-auto">
                        <input type="text" placeholder="Search..." class="form-control" />
                    </div>
                    <div class="col-lg-2 col-md-3 col-6">
                        <select class="form-select">
                            <option>Status</option>
                            <option>Active</option>
                            <option>Disabled</option>
                            <option>Show all</option>
                        </select>
                    </div>
                    <div class="col-lg-2 col-md-3 col-6">
                        <select class="form-select">
                            <option>Show 20</option>
                            <option>Show 30</option>
                            <option>Show 40</option>
                        </select>
                    </div>
                </div>
            </header>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Joined At</th>
                                <th>Status</th>
                                <th>Change status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% userData.forEach((user, index)=> { %>
                                <tr>
                                    <td>
                                        <%= user.name %>
                                    </td>
                                    <td>
                                        <%= user.email %>
                                    </td>
                                    <td>
                                        <%= user.joinedAtFormatted %>
                                    </td>
                                    <td>
                                        <span id="status-<%= user._id %>"
                                            class="badge <%= user.block ? 'bg-secondary' : 'bg-success' %>">
                                            <%= user.block ? 'Inactive' : 'Active' %>
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <% if (user.block) { %>
                                                <button onclick="handleUnblock('<%= user._id %>')"
                                                    id="unblockButton-<%= user._id %>"
                                                    class="btn btn-action btn-success" data-bs-toggle="tooltip"
                                                    data-bs-placement="top" title="Unblock">
                                                    <i class="bx bx-check-circle"></i> Unblock
                                                </button>
                                                <% } else { %>
                                                    <button onclick="handleBlock('<%= user._id %>')"
                                                        id="blockButton-<%= user._id %>"
                                                        class="btn btn-action btn-warning" data-bs-toggle="tooltip"
                                                        data-bs-placement="top" title="Block">
                                                        <i class="bx bx-block"></i> Block
                                                    </button>
                                                    <% } %>
                                        </div>
                                    </td>
                                    <td class="">
                                        <a href="/admin/customers/customer-profile/<%= user._id %>"
                                            class="btn btn-sm btn-brand rounded font-sm mt-15">View profile</a>
                                    </td>
                                </tr>
                                <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="pagination-area mt-15 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start">
                    <li class="page-item active"><a class="page-link" href="#">01</a></li>
                    <li class="page-item"><a class="page-link" href="#">02</a></li>
                    <li class="page-item"><a class="page-link" href="#">03</a></li>
                    <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                    <li class="page-item"><a class="page-link" href="#">16</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#"><i class="material-icons md-chevron_right"></i></a>
                    </li>
                </ul>
            </nav>
        </div>
    </section>
    </main>
    <script src="/adminAssets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/adminAssets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/adminAssets/js/vendors/select2.min.js"></script>
    <script src="/adminAssets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/adminAssets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/adminAssets/js/main.js?v=1.1" type="text/javascript"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <script>
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        async function handleBlock(userId) {
            const confirmation = await confirmAction("block");
            if (confirmation) {
                try {
                    const response = await fetch("/admin/customers/block", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ userId }),
                    });

                    if (response.ok) {
                        // Update UI if blocking was successful
                        const statusSpan = document.querySelector(`#status-${userId}`);
                        const blockButton = document.querySelector(`#blockButton-${userId}`);
                        const unblockButton = document.querySelector(`#unblockButton-${userId}`);

                        if (statusSpan) {
                            statusSpan.textContent = "Inactive";
                            statusSpan.classList.remove("bg-success");
                            statusSpan.classList.add("bg-secondary");
                        }

                        if (blockButton) {
                            blockButton.innerHTML = '<i class="bx bx-check-circle"></i> Unblock';
                            blockButton.classList.remove("btn-warning");
                            blockButton.classList.add("btn-success");
                            blockButton.setAttribute("onclick", `handleUnblock('${userId}')`);
                            blockButton.setAttribute("title", "Unblock");
                            blockButton.setAttribute("id", `unblockButton-${userId}`);
                        }

                        if (unblockButton) {
                            unblockButton.style.display = 'none'; // Hide the unblock button
                        }

                        swal("Success", "User blocked successfully", "success");
                    } else {
                        swal("Error", "Failed to block user", "error");
                        console.error("Failed to block user:", response.status);
                    }
                } catch (error) {
                    console.error("Error blocking user:", error.message);
                    swal("Error", "An error occurred while blocking the user", "error");
                }
            }
        }

        async function handleUnblock(userId) {
            const confirmation = await confirmAction("unblock");
            if (confirmation) {
                try {
                    const response = await fetch("/admin/customers/unblock", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ userId }),
                    });

                    if (response.ok) {
                        // Update UI if unblocking was successful
                        const statusSpan = document.querySelector(`#status-${userId}`);
                        const blockButton = document.querySelector(`#blockButton-${userId}`);
                        const unblockButton = document.querySelector(`#unblockButton-${userId}`);

                        if (statusSpan) {
                            statusSpan.textContent = "Active";
                            statusSpan.classList.remove("bg-secondary");
                            statusSpan.classList.add("bg-success");
                        }

                        if (unblockButton) {
                            unblockButton.innerHTML = '<i class="bx bx-block"></i> Block';
                            unblockButton.classList.remove("btn-success");
                            unblockButton.classList.add("btn-warning");
                            unblockButton.setAttribute("onclick", `handleBlock('${userId}')`);
                            unblockButton.setAttribute("title", "Block");
                            unblockButton.setAttribute("id", `blockButton-${userId}`);
                        }

                        if (blockButton) {
                            blockButton.style.display = 'none'; // Hide the block button
                        }

                        swal("Success", "User unblocked successfully", "success");
                    } else {
                        swal("Error", "Failed to unblock user", "error");
                        console.error("Failed to unblock user:", response.status);
                    }
                } catch (error) {
                    console.error("Error unblocking user:", error.message);
                    swal("Error", "An error occurred while unblocking the user", "error");
                }
            }
        }


        async function confirmAction(action) {
            let confirmationText;
            switch (action) {
                case "block":
                    confirmationText = "block this user";
                    break;
                case "unblock":
                    confirmationText = "unblock this user";
                    break;
                default:
                    confirmationText = "perform this action";
            }

            return new Promise((resolve) => {
                swal({
                    title: `Are you sure you want to ${confirmationText}?`,
                    text: "Once confirmed, the action cannot be undone.",
                    icon: "warning",
                    buttons: ["Cancel", "Confirm"],
                    dangerMode: true,
                }).then((confirmed) => {
                    resolve(confirmed);
                });
            });
        }
    </script>
    </body>

    </html>